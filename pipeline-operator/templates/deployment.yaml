apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pipeline-operator.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pipeline-operator.name" . }}
    app.kubernetes.io/part-of: algo.run
    app.kubernetes.io/component: pipeline-operator
    helm.sh/chart: {{ include "pipeline-operator.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- include "pipeline-operator.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "pipeline-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "pipeline-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pipeline-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - pipeline-operator
          {{- if .Values.metrics.enabled }}
          ports:
            - name: metrics
              containerPort: 8383
            - name: op-metrics
              containerPort: 8686
          {{- end }}
          env:
            - name: OPERATOR_NAME
              value: {{ include "pipeline-operator.name" . }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: WATCH_NAMESPACE
              value: {{ .Values.scope.watchNamespace | quote }}
            {{- if .Values.notifications.enabled }}
            - name: NOTIF_URL
              value: {{ .Values.notifications.url | quote }}
            {{- end }}
            - name: ALGORUNNER_IMAGE
              value: "{{ .Values.algoRunnerImage.repository }}:{{ .Values.algoRunnerImage.tag }}"
            - name: ENDPOINT_IMAGE
              value: "{{ .Values.endpointImage.repository }}:{{ .Values.endpointImage.tag }}"
            - name: HOOK_IMAGE
              value: "{{ .Values.eventHookImage.repository }}:{{ .Values.eventHookImage.tag }}"
            - name: KAFKA_OPERATOR_TYPE
              value: {{ .Values.kafka.operatorType | default "strimzi" | quote }}
            - name: KAFKA_NAMESPACE
              value: {{ .Values.kafka.namespace | quote }}
            - name: KAFKA_CLUSTER_NAME
              value: {{ .Values.kafka.clusterName | quote }}
            {{- if .Values.kafka.tls.enabled }}
            - name: KAFKA_TLS
              value: "true"
            - name: KAFKA_TLS_CA_SECRETNAME
              value: {{ .Values.kafka.tls.caSecretName | quote }}
            - name: KAFKA_TLS_CA_KEY
              value: {{ .Values.kafka.tls.caCertSecretKey | quote }}
            {{- end }}
            {{- if eq .Values.kafka.auth.type "tls" }}
            - name: KAFKA_AUTH_TYPE
              value: "tls"
            - name: KAFKA_AUTH_SECRETNAME
              value: {{ .Values.kafka.auth.authSecretName | quote }}
            - name: KAFKA_AUTH_CERTIFICATE_KEY
              value: {{ .Values.kafka.auth.authCertSecretKey | quote }}
            - name: KAFKA_AUTH_KEY_SECRET_KEY
              value: {{ .Values.kafka.auth.authKeySecretKey | quote }}
            {{- end }}
            {{- if or (eq .Values.kafka.auth.type "scram-sha-512") (eq .Values.kafka.auth.type "plain") }}
            - name: KAFKA_AUTH_TYPE
              value: {{ .Values.kafka.auth.type | quote }}
            - name: KAFKA_AUTH_USERNAME
              value: {{ .Values.kafka.auth.username | quote }}
            - name: KAFKA_AUTH_SECRETNAME
              value: {{ .Values.kafka.auth.authSecretName | quote }}
            - name: KAFKA_AUTH_PASSWORD_SECRET_KEY
              value: {{ .Values.kafka.auth.passwordSecretKey | quote }}
            {{- end }}
            {{- if .Values.env }}
            {{- range $key,$value := .Values.env }}
            - name: {{ $key | upper | quote}}
              value: {{ $value | quote}}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
